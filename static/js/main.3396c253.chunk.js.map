{"version":3,"sources":["../my-app/src/components/Clicky.js","../my-app/src/App.js","../my-app/src/serviceWorker.js","../my-app/src/index.js"],"names":["Clicky","state","imageArray","imageArrayJson","clickCount","imageClick","index","_this","setState","clicked","forEach","image","shuffle","sort","Math","random","_this2","this","react_default","a","createElement","className","src","imgUrl","onClick","alt","React","Component","App","src_components_Clicky","Boolean","window","location","hostname","match","ReactDOM","render","src_App","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.3396c253.chunk.js","sourcesContent":["// imported files and boiler plate\r\nimport React from 'react';\r\nimport './Clicky.css';\r\nimport imageArrayJson from \"./images.json\";\r\n\r\n// setting the state of the json image array and clickcount (score)\r\nclass Clicky extends React.Component {\r\n  state = {\r\n    imageArray: imageArrayJson,\r\n    clickCount: 0\r\n  };\r\n\r\n  // imageclick arrow function. \r\n  imageClick = (index) => {\r\n    this.setState({ clickCount: this.state.clickCount + 1 });\r\n    if (this.state.imageArray[index].clicked === true){\r\n      this.setState({ clickCount: 0 });\r\n      this.state.imageArray.forEach((image) => {\r\n        image.clicked = false;\r\n      })\r\n      // add a modal letting the user know they already clicked that image(they lost or they won)\r\n    } else {\r\n      this.state.imageArray[index].clicked = true;\r\n      this.shuffle(this.state.imageArray);\r\n      this.setState({ imageArray: this.state.imageArray });\r\n    } \r\n  }\r\n\r\n  // source: https://javascript.info/task/shuffle\r\n  // math.random choose random number between 0 and 1, -0.5 will make that number neg half the time and positive half the time.\r\n  // sort function (knows to do something with this???... going to try it)\r\n  shuffle = (imageArray) => {\r\n    imageArray.sort(() => Math.random() - 0.5);\r\n  }\r\n\r\n  // Componants to display on the page: navbar, header, grid of images, footer\r\n  render() {\r\n    return (\r\n      <div>\r\n        <nav className=\"navbar navbar-expand-lg\">\r\n          <div className=\"navbar-brand\">Clicky Game</div>\r\n          <div className=\"navbar-brand\">You guessed correctly!</div>\r\n          <div className=\"navbar-brand\">Score: {this.state.clickCount} | Max Possible Score: 12</div>\r\n        </nav>\r\n        <header>\r\n          <div className=\"jumbotron jumbotron-fluid\">\r\n            <div className=\"container\">\r\n              <h1 className=\"display-4\">Clicky Game!</h1>\r\n              <p className=\"lead\">Click on an image to earn points, but don't click on any more than once!</p>\r\n            </div>\r\n          </div>\r\n        </header>\r\n        <div className=\"container mx-auto\">\r\n          <div className=\"row justify-content-center\">\r\n            <div className=\"col-sm-3 paragraph-format\">\r\n              <figure className=\"figure\">\r\n                <img className=\"fungaiImages\" src={this.state.imageArray[0].imgUrl} onClick={()=>this.imageClick(0)} alt=\"fungai\"/>\r\n              </figure>\r\n            </div>\r\n            <div className=\"col-sm-3 paragraph-format\">\r\n              <figure className=\"figure\">\r\n              <img className=\"fungaiImages\" src={this.state.imageArray[1].imgUrl} onClick={()=>this.imageClick(1)} alt=\"fungai\"/>\r\n              </figure> \r\n            </div>\r\n            <div className=\"col-sm-3 paragraph-format\">\r\n              <figure className=\"figure fungiImages\">\r\n              <img className=\"fungaiImages\" src={this.state.imageArray[2].imgUrl} onClick={()=>this.imageClick(2)} alt=\"fungai\"/>\r\n              </figure> \r\n            </div>\r\n            <div className=\"col-sm-3 paragraph-format\">\r\n              <figure className=\"figure fungiImages\">\r\n              <img className=\"fungaiImages\" src={this.state.imageArray[3].imgUrl} onClick={()=>this.imageClick(3)} alt=\"fungai\"/>\r\n              </figure> \r\n            </div>\r\n          </div>\r\n          <div className=\"row justify-content-center\">\r\n            <div className=\"col-sm-3 paragraph-format\">\r\n              <figure className=\"figure\">\r\n                <img className=\"fungaiImages\" src={this.state.imageArray[4].imgUrl} onClick={()=>this.imageClick(4)} alt=\"fungai\"/>\r\n              </figure>\r\n            </div>\r\n            <div className=\"col-sm-3 paragraph-format\">\r\n              <figure className=\"figure\">\r\n              <img className=\"fungaiImages\" src={this.state.imageArray[5].imgUrl} onClick={()=>this.imageClick(5)} alt=\"fungai\"/>\r\n              </figure> \r\n            </div>\r\n            <div className=\"col-sm-3 paragraph-format\">\r\n              <figure className=\"figure\">\r\n              <img className=\"fungaiImages\" src={this.state.imageArray[6].imgUrl} onClick={()=>this.imageClick(6)} alt=\"fungai\"/>\r\n              </figure> \r\n            </div>\r\n            <div className=\"col-sm-3 paragraph-format\">\r\n              <figure className=\"figure\">\r\n              <img className=\"fungaiImages\" src={this.state.imageArray[7].imgUrl} onClick={()=>this.imageClick(7)} alt=\"fungai\"/>\r\n              </figure> \r\n            </div>\r\n          </div>\r\n          <div className=\"row justify-content-center\">\r\n            <div className=\"col-sm-3 paragraph-format\">\r\n              <figure className=\"figure\">\r\n                <img className=\"fungaiImages\" src={this.state.imageArray[8].imgUrl} onClick={()=>this.imageClick(8)} alt=\"fungai\"/>\r\n              </figure>\r\n            </div>\r\n            <div className=\"col-sm-3 paragraph-format\">\r\n              <figure className=\"figure\">\r\n              <img className=\"fungaiImages\" src={this.state.imageArray[9].imgUrl} onClick={()=>this.imageClick(9)} alt=\"fungai\"/>\r\n              </figure> \r\n            </div>\r\n            <div className=\"col-sm-3 paragraph-format\">\r\n              <figure className=\"figure\">\r\n              <img className=\"fungaiImages\" src={this.state.imageArray[10].imgUrl} onClick={()=>this.imageClick(10)} alt=\"fungai\"/>\r\n              </figure> \r\n            </div>\r\n            <div className=\"col-sm-3 paragraph-format\">\r\n              <figure className=\"figure\">\r\n              <img className=\"fungaiImages\" src={this.state.imageArray[11].imgUrl} onClick={()=>this.imageClick(11)} alt=\"fungai\"/>\r\n              </figure> \r\n            </div>\r\n          </div>      \r\n        </div>\r\n        <footer className=\"footer footer-details fixed-bottom text-center\">\r\n          <div className=\"margin-top-25\">\r\n              \"Clicky Game!\"\r\n              <img alt=\"react\" className=\"reactLogo\" src={\"./images/react-logo-1000-transparent.png\"}></img>\r\n          </div>\r\n        </footer>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default Clicky;\r\n","import React from \"react\";\nimport Clicky from \"./components/Clicky\";\n\nfunction App() {\n  return <Clicky />;\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}